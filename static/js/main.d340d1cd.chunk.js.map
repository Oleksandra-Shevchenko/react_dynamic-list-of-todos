{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/sortType.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","isSelectedTodo","classNames","type","onClick","TodoFilter","query","setQuery","sortType","setSortType","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortType","TodoModal","useState","user","setUser","catchErrors","setCatchErorrs","loadUserFromServer","useCallback","a","userId","userFromServer","useEffect","href","email","name","App","setTodos","isLoaded","setIsLoaded","ALL","loadedTodosFromServer","todosFromServer","sortedTodos","filter","ACTIVE","COMPLETED","trimQuery","toLowerCase","trim","includes","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d340d1cd.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n        const isSelectedTodo = selectedTodo?.id === id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': isSelectedTodo,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                'has-text-success',\n                {\n                  'has-text-danger': !completed,\n                },\n              )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': isSelectedTodo,\n                    'fa-eye-slash': isSelectedTodo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { SortType } from '../../types/sortType';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  sortType: SortType | string;\n  setSortType: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  sortType,\n  setSortType,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sortType}\n          onChange={(event) => setSortType(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum SortType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodo: (value: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [catchErrors, setCatchErorrs] = useState(false);\n\n  const loadUserFromServer = useCallback(async () => {\n    try {\n      const userFromServer = await getUser(todo.userId);\n\n      setUser(userFromServer);\n    } catch (error) {\n      setCatchErorrs(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user && !catchErrors ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { SortType } from './types/sortType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  const [sortType, setSortType] = useState<SortType | string>(SortType.ALL);\n  const [catchErrors, setCatchErorrs] = useState(false);\n\n  const loadedTodosFromServer = useCallback(async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsLoaded(true);\n    } catch (error) {\n      setCatchErorrs(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadedTodosFromServer();\n  }, []);\n\n  const filterTodos = () => {\n    const sortedTodos = todos.filter(todo => {\n      switch (sortType) {\n        case SortType.ACTIVE:\n          return !todo.completed;\n        case SortType.COMPLETED:\n          return todo.completed;\n        default:\n          return todo;\n      }\n    });\n\n    const trimQuery = query.toLowerCase().trim();\n\n    return sortedTodos.filter(todo => (\n      todo.title.toLowerCase().includes(trimQuery)\n    ));\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                sortType={sortType}\n                setSortType={setSortType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!catchErrors && (\n                isLoaded\n                  ? (\n                    <TodoList\n                      todos={filterTodos()}\n                      selectedTodo={selectedTodo}\n                      setSelectedTodo={setSelectedTodo}\n                    />\n                  )\n                  : <Loader />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { catchErrors && selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}